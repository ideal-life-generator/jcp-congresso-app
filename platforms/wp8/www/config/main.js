// Generated by CoffeeScript 1.7.1
(function() {
  var atea;

  atea = angular.module('atea', ['ngRoute', 'ngAnimate', 'ngCookies']);

  atea.config([
    '$interpolateProvider', function($interpolateProvider) {
      $interpolateProvider.startSymbol('_');
      return $interpolateProvider.endSymbol('_');
    }
  ]);

  atea.constant('baseURL', {
    BASE: 'http://188.226.155.227:5000',
    FEEDS: '/feed',
    FEED: '/feed/:feedId',
    PARTNERS: '/:feedId/partners.html',
    RATES: '/:feedId/rate.html',
    RATE: '/rate.html',
    PARTNER: '/partners.html',
    PROFILE: '/profile',
    LOGIN: '/login'
  });

  atea.config([
    '$routeProvider', 'baseURL', function($routeProvider, baseURL) {
      return $routeProvider.when(baseURL.FEEDS, {
        templateUrl: 'template/events.html',
        controller: 'FeedController'
      }).when(baseURL.FEED, {
        templateUrl: 'template/guest.html',
        controller: 'GuestController'
      }).when(baseURL.PARTNERS, {
        templateUrl: 'template/partners.html',
        controller: 'PartnersController'
      }).when(baseURL.RATES, {
        templateUrl: 'template/rate.html',
        controller: 'RateController'
      }).when(baseURL.PROFILE, {
        templateUrl: 'template/profile.html',
        controller: 'ProfileController'
      }).when(baseURL.LOGIN, {
        templateUrl: 'template/login.html',
        controller: 'LoginController'
      });
    }
  ]);

  atea.config([
    '$httpProvider', function($httpProvider) {
      return $httpProvider.defaults.withCredentials = true;
    }
  ]);

  atea.factory('eventsFeed', [
    '$http', '$q', 'baseURL', function($http, $q, baseURL) {
      var self;
      self = this;
      this.getData = (function() {
        var defer;
        defer = $q.defer();
        $http({
          method: 'GET',
          url: "" + baseURL.BASE + "/events"
        }).success(function(result) {
          defer.resolve(result);
          return self.data = result;
        }).error(function(error) {
          return defer.reject(error);
        });
        return defer.promise;
      })();
      return this;
    }
  ]);

  atea.factory('page', [
    '$location', function($location) {
      this.path = $location.$$path;
      this.lastPath = this.path;
      return this;
    }
  ]);

  atea.factory('storage', [
    '$window', function($window) {
      this.setObject = function(name, object) {
        return $window.localStorage.setItem(name, $window.JSON.stringify(object));
      };
      this.getObject = function(name) {
        return $window.JSON.parse($window.localStorage.getItem(name));
      };
      this["delete"] = function(name) {
        return $window.localStorage.removeItem(name);
      };
      return this;
    }
  ]);

  atea.factory('userStatus', [
    '$http', '$q', '$location', 'storage', '$window', '$cookies', '$timeout', 'page', 'baseURL', '$rootScope', function($http, $q, $location, storage, $window, $cookies, $timeout, page, baseURL, $rootScope) {
      var self;
      self = this;
      this.login = function(username, password) {
        var defer;
        defer = $q.defer();
        $http({
          method: 'POST',
          url: "" + baseURL.BASE + "/users/login",
          data: $window.JSON.stringify({
            username: username,
            password: password
          })
        }).then(function(result) {
          return $http({
            method: 'GET',
            url: 'http://188.226.155.227:5000/users/me'
          }).then(function(result) {
            var data;
            data = result.data;
            self.detail = data;
            self.role = self.detail.role;
            storage.setObject('user', data);
            $rootScope.status = self.role;
            defer.resolve(storage.getObject("user"));
            if (page.lastLocation !== baseURL.LOGIN) {
              return $location.path(page.lastLocation);
            } else {
              return $location.path(baseURL.FEEDS);
            }
          }, function(error) {
            return defer.reject(error);
          });
        }, function(error) {
          return defer.reject(error);
        });
        return defer.promise;
      };
      this.logOut = function() {
        storage["delete"]('user');
        self.detail = null;
        self.role = 'user';
        return $rootScope.status = self.role;
      };
      this.detail = null;
      this.role = this.detail ? this.detail.role : 'user';
      return this;
    }
  ]);

  atea.run([
    'baseURL', '$rootScope', 'page', 'userStatus', '$location', '$routeParams', function(baseURL, $rootScope, page, userStatus, $location, $routeParams) {
      $rootScope.status = userStatus.role;
      $rootScope.baseURL = baseURL;
      $rootScope.profileActive = $location.$$path === baseURL.PROFILE ? true : false;
      $rootScope.rateActive = $location.$$path === '/' + $routeParams.feedId + baseURL.RATE ? true : false;
      return $rootScope.$on('$routeChangeStart', function(data, newL, oldL) {
        page.lastLocation = $location.$$path;
        return $rootScope.backButton = $location.$$path === baseURL.FEEDS || $location.$$path === baseURL.PROFILE ? false : true;
      });
    }
  ]);

  atea.controller('RateController', [
    '$scope', '$location', 'baseURL', '$routeParams', '$rootScope', function($scope, $location, baseURL, $routeParams, $rootScope) {
      $rootScope.rateActive = $location.$$path === '/' + $routeParams.feedId + baseURL.RATE ? true : false;
      $rootScope.profileActive = $location.$$path === baseURL.PROFILE ? true : false;
      return $location.prevLocation = baseURL.FEEDS + '/' + $routeParams.feedId;
    }
  ]);

  atea.controller('ProfileController', [
    '$scope', '$location', 'baseURL', '$routeParams', '$rootScope', function($scope, $location, baseURL, $routeParams, $rootScope) {
      $rootScope.rateActive = $location.$$path === '/' + $routeParams.feedId + baseURL.RATE ? true : false;
      $rootScope.profileActive = $location.$$path === baseURL.PROFILE ? true : false;
      return $location.prevLocation = baseURL.FEEDS + '/';
    }
  ]);

  atea.controller('PartnersController', [
    '$scope', '$location', 'baseURL', '$routeParams', '$rootScope', 'eventsFeed', '$http', '$filter', function($scope, $location, baseURL, $routeParams, $rootScope, eventsFeed, $http, $filter) {
      $rootScope.rateActive = $location.$$path === '/' + $routeParams.feedId + baseURL.RATE ? true : false;
      $rootScope.profileActive = $location.$$path === baseURL.PROFILE ? true : false;
      $location.prevLocation = baseURL.FEEDS + '/' + $routeParams.feedId;
      return $http({
        method: 'GET',
        url: "" + baseURL.BASE + "/partners",
        cache: true
      }).then(function(result) {
        return $scope.partners = $filter('orderBy')(result.data, 'name');
      }, function(error) {
        return alert('partner list error');
      });
    }
  ]);

  atea.controller('GuestController', [
    '$scope', '$location', 'baseURL', '$routeParams', '$rootScope', 'eventsFeed', function($scope, $location, baseURL, $routeParams, $rootScope, eventsFeed) {
      $rootScope.rateActive = $location.$$path === '/' + $routeParams.feedId + baseURL.RATE ? true : false;
      $rootScope.profileActive = $location.$$path === baseURL.PROFILE ? true : false;
      $location.prevLocation = baseURL.FEEDS;
      $scope.feedId = $routeParams.feedId;
      return eventsFeed.getData.then(function(result) {
        return angular.forEach(result, function(ev) {
          if (ev.id === $routeParams.feedId) {
            $rootScope.community = ev.eventName;
          }
        });
      });
    }
  ]);

  atea.controller('MainController', [
    '$scope', '$location', 'baseURL', 'userStatus', 'eventsFeed', '$rootScope', '$routeParams', function($scope, $location, baseURL, userStatus, eventsFeed, $rootScope, $routeParams) {
      $rootScope.rateActive = $location.$$path === '/' + $routeParams.feedId + baseURL.RATE ? true : false;
      $rootScope.profileActive = $location.$$path === baseURL.PROFILE ? true : false;
      $scope.leftMenuActivator = function() {
        return $scope.leftMenuActive = !$scope.leftMenuActive;
      };
      $scope.leftMenuHide = function() {
        return $scope.leftMenuActive = false;
      };
      $scope.backLocation = function() {
        if ($location.$$path !== baseURL.FEEDS) {
          return $location.path($location.prevLocation);
        }
      };
      return $scope.logOut = function() {
        userStatus.logOut();
        $scope.leftMenuActive = false;
        return $location.path($location.prevLocation);
      };
    }
  ]);

  atea.controller('FeedController', [
    '$scope', 'eventsFeed', 'userStatus', '$filter', 'baseURL', '$location', '$rootScope', '$routeParams', function($scope, eventsFeed, userStatus, $filter, baseURL, $location, $rootScope, $routeParams) {
      $rootScope.rateActive = $location.$$path === '/' + $routeParams.feedId + baseURL.RATE ? true : false;
      $rootScope.profileActive = $location.$$path === baseURL.PROFILE ? true : false;
      $scope.futureEvents = [];
      $scope.pastEvents = [];
      eventsFeed.getData.then(function(result) {
        var now;
        now = (new Date()).toISOString();
        result = $filter('orderBy')(result, 'startDate');
        return result.forEach(function(event) {
          if (event.endDate > now) {
            return $scope.futureEvents.push(event);
          } else {
            return $scope.pastEvents.push(event);
          }
        });
      }, function(error) {
        return alert('event error');
      });
      $scope.pastEvents.fieldCollapsed = function() {
        if ($scope.pastEvents.collapsed) {
          $scope.pastEvents.collapsed = false;
          return $scope.futureEvents.collapsed = true;
        } else {
          $scope.pastEvents.collapsed = true;
          return $scope.futureEvents.collapsed = true;
        }
      };
      $scope.futureEvents.fieldCollapsed = function() {
        if (!$scope.futureEvents.collapsed) {
          $scope.pastEvents.collapsed = false;
          return $scope.futureEvents.collapsed = true;
        } else {
          $scope.pastEvents.collapsed = false;
          return $scope.futureEvents.collapsed = false;
        }
      };
      return $scope.openEvent = function(ev) {
        eventsFeed.eventActive = ev;
        return $location.path("" + baseURL.FEEDS + "/" + ev.id);
      };
    }
  ]);

  atea.controller('LoginController', [
    '$scope', '$http', '$rootScope', 'userStatus', '$location', 'baseURL', '$routeParams', function($scope, $http, $rootScope, userStatus, $location, baseURL, $routeParams) {
      $rootScope.rateActive = $location.$$path === '/' + $routeParams.feedId + baseURL.RATE ? true : false;
      $rootScope.profileActive = $location.$$path === baseURL.PROFILE ? true : false;
      $location.prevLocation = baseURL.FEEDS;
      $scope.login = {};
      return $scope.login.submit = function() {
        return userStatus.login($scope.login.username, $scope.login.password).then(function(result) {
          return $rootScope.status = userStatus.role;
        }, function(error) {
          return $rootScope.status = 'user';
        });
      };
    }
  ]);

}).call(this);
