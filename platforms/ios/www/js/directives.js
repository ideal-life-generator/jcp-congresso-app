// Generated by CoffeeScript 1.7.1
(function() {
  var atea;

  atea = angular.module('atea');

  atea.directive('loader', [
    function() {
      return {
        restrict: 'E',
        template: '<div ng-show="loader" class="loader"> <div ng-show="loading" class="loading"> </div> <div ng-click="updater()" ng-show="warning" class="warning"> <p>~ noConnectionMessage ~</p> </div> </div>',
        replace: true,
        controller: ['$scope', function($scope) {}]
      };
    }
  ]);

  atea.directive('warning', [
    'connection', '$window', function(connection, $window) {
      return {
        restrict: 'C',
        controller: [
          '$scope', function($scope) {
            $scope.message = connection.message;
            $scope.updater = function() {
              if (!$scope.update) {
                $scope.loading = true;
                $scope.warning = false;
                return $scope.f();
              }
            };
            return $window.ononline = function() {
              if ($scope.f) {
                return $scope.updater();
              }
            };
          }
        ]
      };
    }
  ]);

  atea.directive('cSwiperight', [
    '$timeout', function($timeout) {
      return {
        restrict: 'A',
        scope: true,
        controller: [
          '$scope', '$element', '$attrs', function($scope, $element, $attrs) {
            var element, mousemove, timeout, x, xS;
            x = xS = 0;
            timeout = null;
            mousemove = function(event) {
              event.stopPropagation();
              return x = event.changedTouches[0].clientX - xS;
            };
            return element = angular.element($element).on("touchstart", function(event) {
              event.stopPropagation();
              xS = event.changedTouches[0].clientX;
              $timeout(function() {
                if (320 / 5 < x) {
                  return $scope[$attrs.cSwiperight]();
                }
              }, 150);
              return angular.element(this, event).on("touchmove", mousemove);
            }).on("touchend", function(event) {
              var Xs;
              event.stopPropagation();
              x = Xs = 0;
              return angular.element(this, event).off("touchmove");
            });
          }
        ]
      };
    }
  ]);

  atea.directive('surveyText', [
    function() {
      return {
        restrict: 'E',
        replace: true,
        scope: {
          setting: '='
        },
        template: '<li> <h3>~setting.subject~ <span ng-show="setting.is_required">*</span></h3> <input type="text" name="~setting.name~" ng-model="setting.value" ng-minlength="~setting.min_length~" ng-maxlength="~setting.max_length~" ng-required="~setting.is_required~" placeholder="~setting.placeholder~"> <h4>~setting.intro~</h4> </li>',
        controller: ['$scope', function($scope) {}]
      };
    }
  ]);

  atea.directive('surveyTextarea', [
    function() {
      return {
        restrict: 'E',
        replace: true,
        scope: {
          setting: '='
        },
        template: '<li> <h3>~setting.subject~ <span ng-show="setting.is_required">*</span></h3> <textarea type="text" class="form-control" name="~setting.name~" ng-model="setting.value" ng-minlength="~setting.min_length~" ng-maxlength="~setting.max_length~" ng-required="~setting.is_required~" placeholder="~setting.placeholder~"> </textarea> <h4>~setting.intro~</h4> </li>',
        controller: ['$scope', function($scope) {}]
      };
    }
  ]);

  atea.directive('surveyCheckboxlist', [
    function() {
      return {
        restrict: 'E',
        replace: true,
        scope: {
          setting: '='
        },
        template: '<li> <div class="clear"></div> <h3>~setting.subject~ <span ng-show="setting.is_required">*</span></h3> <div	ng-repeat="checkbox in setting.options" class="survey-checkbox"> <label> <input type="checkbox" style="float: left;" name="~setting.name~" value="~checkbox.answer_value~" ng-model="checkbox.value" ng-click="addCheck(checkbox)"> <span style="float: left; padding: 0.6em 0 0.6em 0.6em;">~ checkbox.subject ~</span> </label> </div><div class="clear"></div> <h4>~setting.intro~</h4> </li>',
        controller: [
          '$scope', function($scope) {
            $scope.rest = [];
            return $scope.addCheck = function(checkbox) {
              if (!checkbox.value) {
                return $scope.rest.push(true);
              } else {
                return delete $scope.rest.pop();
              }
            };
          }
        ]
      };
    }
  ]);

  atea.directive('surveyCheckbox', [
    function() {
      return {
        restrict: 'C',
        scope: {
          rest: '@'
        },
        controller: [
          '$scope', function($scope) {
            return $scope.isRequired = function() {};
          }
        ]
      };
    }
  ]);

  atea.directive('surveyRadiolist', [
    function() {
      return {
        restrict: 'E',
        replace: true,
        scope: {
          setting: '='
        },
        template: '<li> <div class="clear"></div> <h3>~setting.subject~ <span ng-show="setting.is_required">*</span></h3> <div	ng-repeat="radio in setting.options" style="float: left; margin-right: 1.6em; height: 30px;"> <label> <input type="radio" style="float: left;" name="~setting.name~" value="~radio.answer_value~" ng-model="setting.value" ng-required="~setting.is_required~" placeholder="~setting.placeholder~"> <span style="float: left; padding: 0.6em 0 0.6em 0.6em;">~ radio.subject ~</span> </label> </div><div class="clear"></div> <h4>~setting.intro~</h4> </li>',
        controller: ['$scope', function($scope) {}]
      };
    }
  ]);

  atea.directive('surveyDropdownlist', [
    function() {
      return {
        restrict: 'E',
        replace: true,
        scope: {
          setting: '='
        },
        template: '<li> <h3>~setting.subject~ <span ng-show="setting.is_required">*</span></h3> <div> <select class="form-control" name="~setting.name~" ng-model="setting.value" ng-required="~setting.is_required~" placeholder="~setting.placeholder~" ng-required="~setting.is_required~"> <option value="" disabled="~setting.is_required~">-- Select value --</option> <option ng-repeat="option in setting.options" type="radio" value="~option.answer_value~"> ~ option.subject ~ </option> </select> </div> <h4>~setting.intro~</h4> </li>',
        controller: ['$scope', function($scope) {}]
      };
    }
  ]);

  atea.directive('surveyEmail', [
    function() {
      return {
        restrict: 'E',
        replace: true,
        scope: {
          setting: '='
        },
        template: '<li> <h3>~setting.subject~ <span ng-show="setting.is_required">*</span></h3> <input type="email" name="~setting.name~" ng-model="setting.value" ng-minlength="0" ng-maxlength="250" ng-required="~setting.is_required~" ng-pattern="setting.pattern" placeholder="~setting.placeholder~"> <h4>~setting.intro~</h4> </li>',
        controller: ['$scope', function($scope) {}]
      };
    }
  ]);

  atea.directive('surveyNumber', [
    function() {
      return {
        restrict: 'E',
        replace: true,
        scope: {
          setting: '='
        },
        template: '<li> <h3>~setting.subject~ <span ng-show="setting.is_required">*</span></h3> <input type="number" name="~setting.name~" ng-model="setting.value" ng-minlength="~setting.min_length~" ng-maxlength="~setting.max_length~" ng-required="~setting.is_required~" placeholder="~setting.placeholder~"> <h4>~setting.intro~</h4> </li>',
        controller: ['$scope', function($scope) {}]
      };
    }
  ]);

  atea.directive('surveyMobile', [
    function() {
      return {
        restrict: 'E',
        replace: true,
        scope: {
          setting: '='
        },
        template: '<li> <h3>~setting.subject~ <span ng-show="setting.is_required">*</span></h3> <input type="text" name="~setting.name~" ng-model="setting.value" ng-minlength="~setting.min_length~" ng-maxlength="~setting.max_length~" ng-required="~setting.is_required~" placeholder="~setting.placeholder~"> <h4>~setting.intro~</h4> </li>',
        controller: ['$scope', function($scope) {}]
      };
    }
  ]);

  atea.directive('surveySmiles', [
    function() {
      return {
        restrict: 'E',
        replace: true,
        scope: {
          setting: '='
        },
        template: '<li> <div class="clear"></div> <h3>~setting.subject~ <span ng-show="setting.is_required">*</span></h3> <div	ng-repeat="smile in setting.options" class="smile"> <label style="background: url(~smile_image | lowercase~) no-repeat center center;"> <input type="radio" name="~setting.name~" value="~smile.answer_value~" ng-model="setting.value" ng-required="~setting.is_required~" placeholder="~setting.placeholder~"> </label> </div><div class="clear"></div> <h4 ng-if="setting.intro">~setting.intro~</h4> </li>',
        controller: ['$scope', function($scope) {}]
      };
    }
  ]);

  atea.directive('pushyLeft', [
    '$rootScope', function($rootScope) {
      return {
        restrict: 'C',
        controller: [
          '$scope', function($scope, $element) {
            return $rootScope.leftMenu = $element;
          }
        ]
      };
    }
  ]);

  atea.directive("smile", [
    function() {
      return {
        restrict: "C",
        controller: [
          "$scope", function($scope) {
            return $scope.$watch("setting.value", function(data) {
              var img;
              img = new Image();
              img.src = "img/Good.png";
              img = new Image();
              img.src = "img/Good-active.png";
              if ($scope.smile.answer_value === ~~data) {
                return $scope.smile_image = "img/" + $scope.smile.subject + ".png";
              } else {
                return $scope.smile_image = "img/" + $scope.smile.subject + "-active" + ".png";
              }
            });
          }
        ]
      };
    }
  ]);

  atea.directive("loto", function(loto, $timeout) {
    return {
      restrict: "C",
      controller: function($scope, $element) {
        $scope.$watch("loto.length", function(data) {
          return $scope.length = loto.length;
        });
        $scope.loto = loto;
        return $scope.$watch("loto._count", function(data) {
          if (data === 3) {
            loto.afterFn();
            loto.afterFn = null;
            loto._count = 0;
            return $timeout(function() {
              return loto.number = null;
            }, 1000);
          }
        });
      }
    };
  });

  atea.directive("items", function($timeout, loto) {
    return {
      restrict: "C",
      controller: function($scope, $element) {
        $scope.length = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
        return $scope.$watch("loto.number", function(data) {
          var start, step;
          if (data) {
            loto.height = $element[0].clientHeight;
            $scope.stylesheet = {
              top: null
            };
            start = 0;
            step = function() {
              var equal, now;
              now = new Date().getTime();
              equal = (now - start) / loto.speed;
              if (step._krugi + 1 === loto.krugi) {
                if (loto.height * 10 * equal > step._count * loto.height) {
                  step._count++;
                }
              }
              if (equal < 1 && (step._krugi < loto.krugi - 1 || step._count - 1 < loto.number[$scope.$index])) {
                $scope.stylesheet.top = loto.height * 10 * equal + "px";
                return $timeout(step, loto.frames);
              } else {
                if (step._krugi < loto.krugi) {
                  step._krugi++;
                  start = new Date().getTime();
                  return $timeout(step, loto.frames);
                } else {
                  $scope.stylesheet.top = loto.number[$scope.$index] * loto.height + "px";
                  return loto._count++;
                }
              }
            };
            step._count = 0;
            step._krugi = 0;
            return $timeout(function() {
              start = new Date().getTime();
              return step();
            }, ($scope.$index + 1) * loto.speed / 10 + 600);
          }
        });
      }
    };
  });

  atea.directive("item", function(loto) {
    return {
      restrict: "C",
      controller: function($scope) {
        $scope.stylesheet = {
          top: null
        };
        return $scope.stylesheet.top = $scope.$index * -loto.height + "px";
      }
    };
  });

  atea.directive("message", function(message) {
    return {
      restrict: "C",
      controller: function($scope, $element) {
        message._element = $element;
        $scope.message = message;
        return $scope.$watch("message.text", function(option) {
          $scope.text = message.text;
          return $scope.close = function() {
            if (message._close) {
              message._close = false;
              return message.close();
            }
          };
        });
      }
    };
  });

}).call(this);
